{"version":3,"sources":["webpack:///webpack/bootstrap ec66e4b30ebec24613b8","webpack:///./src/server.ts","webpack:///external \"http\"","webpack:///external \"debug\"","webpack:///./src/App.ts","webpack:///external \"express\"","webpack:///external \"morgan\"","webpack:///external \"body-parser\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA,oCAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzCA,kC;;;;;;ACAA,mC;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,kBAAkB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;;;;;;;ACnCA,qC;;;;;;ACAA,oC;;;;;;ACAA,yC","file":"./dist/server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ec66e4b30ebec24613b8","\"use strict\";\r\nvar http = require(\"http\");\r\nvar debug = require(\"debug\"); // terminal logging을 위한 모듈\r\nvar App_1 = require(\"./App\");\r\ndebug('test');\r\nvar port = normalizePort(process.env.PORT || 3000);\r\nApp_1.default.set('port', port);\r\nvar server = http.createServer(App_1.default);\r\nserver.listen(port);\r\n//server.on('error', onError);\r\n//server.on('listening', onListening);\r\nfunction normalizePort(val) {\r\n    var port = (typeof val === 'string') ? parseInt(val, 10) : val;\r\n    if (isNaN(port))\r\n        return val;\r\n    else if (port >= 0)\r\n        return port;\r\n    else\r\n        return false;\r\n}\r\nfunction onError(error) {\r\n    if (error.syscall !== 'listen')\r\n        throw error;\r\n    var bind = (typeof port === 'string') ? 'Pipe ' + port : 'Port ' + port;\r\n    switch (error.code) {\r\n        case 'EACCES':\r\n            console.error(bind + \" requires elevated privileges\");\r\n            process.exit(1);\r\n            break;\r\n        case 'EADDRINUSE':\r\n            console.error(bind + \" is already in use\");\r\n            process.exit(1);\r\n            break;\r\n        default:\r\n            throw error;\r\n    }\r\n}\r\nfunction onListening() {\r\n    var addr = server.address();\r\n    var bind = (typeof addr === 'string') ? \"pipe \" + addr : \"port \" + addr.port;\r\n    debug(\"Listening on \" + bind);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/server.ts\n// module id = 0\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"debug\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"debug\"\n// module id = 2\n// module chunks = 0","\"use strict\";\r\nvar express = require(\"express\");\r\nvar logger = require(\"morgan\");\r\nvar bodyParser = require(\"body-parser\");\r\n// Creates and configures an ExpressJS web server.\r\nvar App = (function () {\r\n    //Run configuration methods on the Express instance.\r\n    function App() {\r\n        this.express = express();\r\n        this.middleware();\r\n        this.routes();\r\n    }\r\n    // Configure Express middleware.\r\n    App.prototype.middleware = function () {\r\n        this.express.use(logger('dev'));\r\n        this.express.use(bodyParser.json());\r\n        this.express.use(bodyParser.urlencoded({ extended: false }));\r\n    };\r\n    // Configure API endpoints.\r\n    App.prototype.routes = function () {\r\n        /* This is just to get up and running, and to make sure what we've got is\r\n         * working so far. This function will change when we start to add more\r\n         * API endpoints */\r\n        var router = express.Router();\r\n        // placeholder route handler\r\n        router.get('/', function (req, res, next) {\r\n            res.json({\r\n                message: 'Hello World!'\r\n            });\r\n        });\r\n        this.express.use('/', router);\r\n    };\r\n    return App;\r\n}());\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = new App().express;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.ts\n// module id = 3\n// module chunks = 0","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"morgan\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"morgan\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}